from flask import jsonify, request
from ...v1 import version_1 as v1
from ..schemas.office_schema import OfficeSchema
from ..models.office_model import Office

db = Office()

@v1.route('/office', methods=['POST'])
def create_office():
    """ Function to create a office """
    json_data = request.get_json()

    # No data has been provided
    if not json_data:
        return jsonify({'status': 400, 'error': 'No data provided'}), 400

    # Check if request is valid
    data, errors = OfficeSchema().load(json_data)
    if errors:
        return jsonify({'status': 400, 'error' : 'Invalid data. Please fill all required fields', 'errors': errors}), 400

    if db.exists('name', data['name']):
        return jsonify({'status': 409, 'message' : 'Offfice already does exists'}), 409

  
    # Save new office and return response
    new_office = db.save(data)
    result = OfficeSchema().dump(new_office).data
    return jsonify({'status': 201, 'message': 'Office created successfully', 'data': [result]}), 201

@v1.route('/office/<int:office_id>', methods=['GET'])
def fetch_office(party_id):
    """ Function to fetch specific party """
    # Check if office exists 
    if not db.exists('id', office_id):
        return  jsonify({'status': 404, 'error': 'party not found'}), 404

    # Get office 
    officess = db.fetch_by_id(office_id)
    result = OfficeSchema(many=True).dump(officess).data
    return jsonify({'status':200, 'data':result}), 200



@v1.route('/offices', methods=['GET'])
def get():
    all_offices = db.all()
    result = OfficeSchema(many=True).dump(all_offices).data
    return jsonify({'status':200, 'data':result}), 200
